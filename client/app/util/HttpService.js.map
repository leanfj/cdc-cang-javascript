{"version":3,"sources":["../../app-src/util/HttpService.js"],"names":["HttpService","_handleErrors","response","ok","Error","statusText","get","url","fetch","then","json","catch","error","console","log"],"mappings":";;;;;;UAAaA,W,GAAN,MAAMA,WAAN,CAAkB;AACvBC,sBAAcC,QAAd,EAAwB;AACtB,cAAI,CAACA,SAASC,EAAd,EAAkB,MAAM,IAAIC,KAAJ,CAAUF,SAASG,UAAnB,CAAN;;AAElB,iBAAOH,QAAP;AACD;AACDI,YAAIC,GAAJ,EAAS;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAOC,MAAMD,GAAN,EACJE,IADI,CACCP,YAAY,KAAKD,aAAL,CAAmBC,QAAnB,CADb,EAEJO,IAFI,CAECP,YAAYA,SAASQ,IAAT,EAFb,EAGJC,KAHI,CAGEC,SAASC,QAAQC,GAAR,CAAY,kBAAkBF,KAA9B,CAHX,CAAP;AAID;AA/BsB,O","file":"HttpService.js","sourcesContent":["export class HttpService {\n  _handleErrors(response) {\n    if (!response.ok) throw new Error(response.statusText);\n\n    return response;\n  }\n  get(url) {\n    // return new Promise((resolve, reject) => {\n    //   const xhr = new XMLHttpRequest();\n\n    //   //Abrindo conexão\n    //   xhr.open(\"GET\", url);\n\n    //   //Execução de metodo quando estado da requisição for alterado\n    //   xhr.onreadystatechange = () => {\n    //     if (xhr.readyState == 4) {\n    //       if (xhr.status == 200) {\n    //         resolve(JSON.parse(xhr.responseText));\n    //       } else {\n    //         console.log(xhr.responseText);\n    //         reject(xhr.responseText);\n    //       }\n    //     }\n    //   };\n    //   xhr.send();\n    // });\n\n    return fetch(url)\n      .then(response => this._handleErrors(response))\n      .then(response => response.json())\n      .catch(error => console.log(\"Error fetch: \" + error));\n  }\n}\n"]}