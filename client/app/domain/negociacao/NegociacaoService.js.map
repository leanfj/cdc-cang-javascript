{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","constructor","_http","obterNegocicoesDaSemana","get","then","dados","negociacoes","map","objeto","Date","data","quantidade","valor","payLoad","mensagem","err","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","obtemNegociacoesDoPeriodo","error","console","log","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,iB,sBAAAA,W;;AACAC,gB,iBAAAA,U;;AACAC,0B,+BAAAA,oB;;;AAEF,YAAMC,iBAAN,CAAwB;AAC7BC,sBAAc;AACZ,eAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACD;AACDM,kCAA0B;AACxB,iBAAO,KAAKD,KAAL,CAAWE,GAAX,CAAe,oBAAf,EAAqCC,IAArC,CACLC,SAAS;AACP,kBAAMC,cAAcD,MAAME,GAAN,CAClBC,UACE,IAAIX,UAAJ,CACE,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CADF,EAEEF,OAAOG,UAFT,EAGEH,OAAOI,KAHT,CAFgB,CAApB;AAQA,kBAAMC,UAAU;AACdC,wBAAU,oCADI;AAEdR;AAFc,aAAhB;AAIA,mBAAOO,OAAP;AACD,WAfI,EAgBLE,OAAO;AACL,kBAAM,IAAIjB,oBAAJ,CAAyB,oCAAzB,CAAN;AACD,WAlBI,CAAP;AAoBD;;AAEDkB,2CAAmC;AACjC,iBAAO,KAAKf,KAAL,CAAWE,GAAX,CAAe,sBAAf,EAAuCC,IAAvC,CACLC,SAAS;AACP,kBAAMC,cAAcD,MAAME,GAAN,CAClBC,UACE,IAAIX,UAAJ,CACE,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CADF,EAEEF,OAAOG,UAFT,EAGEH,OAAOI,KAHT,CAFgB,CAApB;;AASA,kBAAMC,UAAU;AACdC,wBAAU,oCADI;AAEdR;AAFc,aAAhB;;AAKA,mBAAOO,OAAP;AACD,WAjBI,EAkBLE,OAAO;AACL,kBAAM,IAAIjB,oBAAJ,CACJ,0DADI,CAAN;AAGD,WAtBI,CAAP;AAwBD;;AAEDmB,4CAAoC;AAClC,iBAAO,KAAKhB,KAAL,CAAWE,GAAX,CAAe,uBAAf,EAAwCC,IAAxC,CACLC,SAAS;AACP,kBAAMC,cAAcD,MAAME,GAAN,CAClBC,UACE,IAAIX,UAAJ,CACE,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CADF,EAEEF,OAAOG,UAFT,EAGEH,OAAOI,KAHT,CAFgB,CAApB;;AASA,kBAAMC,UAAU;AACdC,wBAAU,oCADI;AAEdR;AAFc,aAAhB;;AAKA,mBAAOO,OAAP;AACD,WAjBI,EAkBLE,OAAO;AACL,kBAAM,IAAIjB,oBAAJ,CACJ,2DADI,CAAN;AAGD,WAtBI,CAAP;AAwBD;;AAEKoB,iCAAN,GAAkC;AAAA;;AAAA;AAChC,gBAAI,CACH,CADD,CACE,OAAOC,KAAP,EAAc;AACdC,sBAAQC,GAAR,CAAYF,KAAZ;AACA,oBAAM,IAAIrB,oBAAJ,CACJ,+CADI,CAAN;AAGD;;AAED,gBAAIwB,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC9B,MAAKtB,uBAAL,EAD8B,EAE9B,MAAKc,gCAAL,EAF8B,EAG9B,MAAKC,iCAAL,EAH8B,CAAZ,CAApB;AAKA,mBAAOK,QACJG,MADI,CACG,UAACC,SAAD,EAAYC,IAAZ;AAAA,qBAAqBD,UAAUE,MAAV,CAAiBD,KAAKrB,WAAtB,CAArB;AAAA,aADH,EAC4D,EAD5D,EAEJuB,IAFI,CAEC,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAUA,EAAErB,IAAF,CAAOsB,OAAP,KAAmBF,EAAEpB,IAAF,CAAOsB,OAAP,EAA7B;AAAA,aAFD,CAAP;AAdgC;AAiBjC;AAlG4B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from \"../../util/HttpService.js\";\nimport { Negociacao } from \"./Negociacao.js\";\nimport { ApplicationException } from \"../../util/ApplicationException.js\";\n\nexport class NegociacaoService {\n  constructor() {\n    this._http = new HttpService();\n  }\n  obterNegocicoesDaSemana() {\n    return this._http.get(\"negociacoes/semana\").then(\n      dados => {\n        const negociacoes = dados.map(\n          objeto =>\n            new Negociacao(\n              new Date(objeto.data),\n              objeto.quantidade,\n              objeto.valor\n            )\n        );\n        const payLoad = {\n          mensagem: \"Negociações importadas com sucesso\",\n          negociacoes\n        };\n        return payLoad;\n      },\n      err => {\n        throw new ApplicationException(\"Não foi possível obter negociações\");\n      }\n    );\n  }\n\n  obterNegociacoesDaSemanaAnterior() {\n    return this._http.get(\"negociacoes/anterior\").then(\n      dados => {\n        const negociacoes = dados.map(\n          objeto =>\n            new Negociacao(\n              new Date(objeto.data),\n              objeto.quantidade,\n              objeto.valor\n            )\n        );\n\n        const payLoad = {\n          mensagem: \"Negociações importadas com sucesso\",\n          negociacoes\n        };\n\n        return payLoad;\n      },\n      err => {\n        throw new ApplicationException(\n          \"Não foi possível obter as negociações da semana anterior\"\n        );\n      }\n    );\n  }\n\n  obterNegociacoesDaSemanaRetrasada() {\n    return this._http.get(\"negociacoes/retrasada\").then(\n      dados => {\n        const negociacoes = dados.map(\n          objeto =>\n            new Negociacao(\n              new Date(objeto.data),\n              objeto.quantidade,\n              objeto.valor\n            )\n        );\n\n        const payLoad = {\n          mensagem: \"Negociações importadas com sucesso\",\n          negociacoes\n        };\n\n        return payLoad;\n      },\n      err => {\n        throw new ApplicationException(\n          \"Não foi possível obter as negociações da semana retrasada\"\n        );\n      }\n    );\n  }\n\n  async obtemNegociacoesDoPeriodo() {\n    try {\n    } catch (error) {\n      console.log(error);\n      throw new ApplicationException(\n        \"Não foi possível obter negociações do período\"\n      );\n    }\n\n    let periodo = await Promise.all([\n      this.obterNegocicoesDaSemana(),\n      this.obterNegociacoesDaSemanaAnterior(),\n      this.obterNegociacoesDaSemanaRetrasada()\n    ]);\n    return periodo\n      .reduce((novoArray, item) => novoArray.concat(item.negociacoes), [])\n      .sort((a, b) => b.data.getTime() - a.data.getTime());\n  }\n}\n"]}