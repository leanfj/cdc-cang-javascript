{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacao","NegociacaoService","Negociacoes","DataInvalidaException","DateConverter","Mensagem","MensagemView","NegociacoesView","Bind","getNegociacaoDao","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_negociacoes","_mensagem","_service","_init","dao","negociacoes","listaTodos","forEach","negociacao","adiciona","error","texto","message","event","preventDefault","_criaNegociacao","adciona","_limpaformulario","console","log","stack","toDate","value","parseInt","parseFloat","focus","apaga","apagaTodos","esvazia","importaNegociacoes","obtemNegociacoesDoPeriodo","filter","novaNegociacao","paraArray","some","negociacaoExistente","equals"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacao, NegociacaoService, Negociacoes } from \"../domain/index.js\";\nimport {\n  DataInvalidaException,\n  DateConverter,\n  Mensagem,\n  MensagemView,\n  NegociacoesView\n} from \"../ui/index.js\";\nimport { Bind, getNegociacaoDao } from \"../util/index.js\";\n\nexport class NegociacaoController {\n  constructor() {\n    //Busca adcionadas ao constructor para evitar pecorrer o DOM\n    //bind para manter o contexto do this em document\n    const $ = document.querySelector.bind(document);\n\n    //elementos HTML\n    this._inputData = $(\"#data\");\n    this._inputQuantidade = $(\"#quantidade\");\n    this._inputValor = $(\"#valor\");\n\n    // this._negociacoes = ProxyFactory.create(\n    //   new Negociacoes(),\n    //   [\"adiciona\", \"esvazia\"],\n    //   model => this._negociacoesView.update(model)\n    // );\n    // this._negociacoesView = new NegociacoesView(\"#negociacoes\");\n    // this._negociacoesView.update(this._negociacoes);\n\n    this._negociacoes = new Bind(\n      new Negociacoes(),\n      new NegociacoesView(\"#negociacoes\"),\n      \"adiciona\",\n      \"esvazia\"\n    );\n\n    // this._mensagem = ProxyFactory.create(new Mensagem(), [\"texto\"], model =>\n    //   this._mensagemView.update(model)\n    // );\n    // this._mensagemView = new MensagemView(\"#mensagemView\");\n    // this._mensagemView.update(this._mensagem);\n\n    this._mensagem = new Bind(\n      new Mensagem(),\n      new MensagemView(\"#mensagemView\"),\n      \"texto\"\n    );\n\n    this._service = new NegociacaoService();\n    this._init();\n  }\n  async _init() {\n    try {\n      const dao = await getNegociacaoDao();\n      const negociacoes = await dao.listaTodos();\n      negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao));\n    } catch (error) {\n      this._mensagem.texto = error.message;\n    }\n  }\n\n  async adiciona(event) {\n    try {\n      //Previnir evento padrão\n      event.preventDefault();\n\n      const negociacao = this._criaNegociacao();\n\n      const dao = await getNegociacaoDao();\n      await dao.adciona(negociacao);\n      this._negociacoes.adiciona(negociacao);\n      this._mensagem.texto = \"Negociação adicionada com Sucesso\";\n      this._limpaformulario();\n    } catch (error) {\n      console.log(error);\n      console.log(error.stack);\n      if (error instanceof DataInvalidaException) {\n        this._mensagem.texto = error.message;\n      } else {\n        this._mensagem.texto =\n          \"Um erro nao esperado aconteceu. Entre em contato com o suporte\";\n      }\n    }\n  }\n\n  _criaNegociacao() {\n    return new Negociacao(\n      DateConverter.toDate(this._inputData.value),\n      parseInt(this._inputQuantidade.value),\n      parseFloat(this._inputValor.value)\n    );\n  }\n\n  _limpaformulario() {\n    this._inputData.value = \"\";\n    this._inputQuantidade.value = 1;\n    this._inputValor.value = 0.0;\n    this._inputData.focus();\n  }\n\n  async apaga() {\n    try {\n      const dao = await getNegociacaoDao();\n      await dao.apagaTodos();\n      this._negociacoes.esvazia();\n      this._mensagem.texto = \"Negociações Apagada com sucesso\";\n    } catch (error) {\n      this._mensagem.texto = error.message;\n    }\n  }\n\n  async importaNegociacoes() {\n    /* const listaNegociacoes = [];\n\n    this._service\n      .obterNegocicoesDaSemana()\n      .then(({ negociacoes }) => {\n        listaNegociacoes.push(...negociacoes);\n        return this._service.obterNegociacaoDaSemanaAnterior();\n      })\n      .then(({ negociacoes }) => {\n        listaNegociacoes.push(...negociacoes);\n        return this._service.obterNegociacoesDaSemanaRetrasada();\n      })\n      .then(({ negociacoes, mensagem }) => {\n        listaNegociacoes.push(...negociacoes);\n\n        listaNegociacoes.forEach(negociacao =>\n          this._negociacoes.adiciona(negociacao)\n        );\n        this._mensagem.texto = mensagem;\n      })\n      .catch(err => (this._mensagem.texto = err));*/\n    // Promise.all([\n    //   this._service.obterNegocicoesDaSemana(),\n    //   this._service.obterNegociacoesDaSemanaAnterior(),\n    //   this._service.obterNegociacoesDaSemanaRetrasada()\n    // ])\n    //   .then(periodo => {\n    //     periodo = periodo\n    //       .reduce((novoArray, item) => novoArray.concat(item.negociacoes), [])\n    //       .forEach(negociacao => this._negociacoes.adiciona(negociacao));\n    //   })\n    //   .catch(err => (this._mensagem.texto = err));\n\n    try {\n      const negociacoes = await this._service.obtemNegociacoesDoPeriodo();\n\n      negociacoes\n        .filter(\n          novaNegociacao =>\n            !this._negociacoes\n              .paraArray()\n              .some(negociacaoExistente =>\n                novaNegociacao.equals(negociacaoExistente)\n              )\n        )\n        .forEach(negociacao => this._negociacoes.adiciona(negociacao));\n      this._mensagem.texto = \"Negociações do período importadas com sucesso\";\n    } catch (error) {\n      this._mensagem.texto = error.message;\n    }\n  }\n}\n"]}