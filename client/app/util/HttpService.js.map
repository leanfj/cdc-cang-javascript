{"version":3,"sources":["../../app-src/util/HttpService.js"],"names":["HttpService","get","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","responseText","console","log","send"],"mappings":";;;;;;AAAO,YAAMA,WAAN,CAAkB;AACvBC,YAAIC,GAAJ,EAAS;AACP,iBAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,kBAAMC,MAAM,IAAIC,cAAJ,EAAZ;;AAEA;AACAD,gBAAIE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB;;AAEA;AACAI,gBAAIG,kBAAJ,GAAyB,MAAM;AAC7B,kBAAIH,IAAII,UAAJ,IAAkB,CAAtB,EAAyB;AACvB,oBAAIJ,IAAIK,MAAJ,IAAc,GAAlB,EAAuB;AACrBP,0BAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR;AACD,iBAFD,MAEO;AACLC,0BAAQC,GAAR,CAAYV,IAAIQ,YAAhB;AACAT,yBAAOC,IAAIQ,YAAX;AACD;AACF;AACF,aATD;AAUAR,gBAAIW,IAAJ;AACD,WAlBM,CAAP;AAmBD;AArBsB","file":"HttpService.js","sourcesContent":["export class HttpService {\n  get(url) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      //Abrindo conexão\n      xhr.open(\"GET\", url);\n\n      //Execução de metodo quando estado da requisição for alterado\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState == 4) {\n          if (xhr.status == 200) {\n            resolve(JSON.parse(xhr.responseText));\n          } else {\n            console.log(xhr.responseText);\n            reject(xhr.responseText);\n          }\n        }\n      };\n      xhr.send();\n    });\n  }\n}\n"]}