{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacao","NegociacaoService","Negociacoes","DateConverter","Mensagem","MensagemView","NegociacoesView","Bind","getNegociacaoDao","getExceptionMessage","Debounce","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_negociacoes","_mensagem","_service","_init","dao","negociacoes","listaTodos","forEach","adiciona","negociacao","error","texto","event","preventDefault","_criaNegociacao","adciona","_limpaformulario","console","log","stack","DataInvalidaException","toDate","value","parseInt","parseFloat","focus","apaga","apagaTodos","esvazia","importaNegociacoes","obtemNegociacoesDoPeriodo","filter","paraArray","some","novaNegociacao","equals","negociacaoExistente"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacao, NegociacaoService, Negociacoes } from \"../domain/index.js\";\nimport {\n  DateConverter,\n  Mensagem,\n  MensagemView,\n  NegociacoesView\n} from \"../ui/index.js\";\nimport {\n  Bind,\n  getNegociacaoDao,\n  getExceptionMessage,\n  Debounce\n} from \"../util/index.js\";\n\nexport class NegociacaoController {\n  constructor() {\n    //Busca adcionadas ao constructor para evitar pecorrer o DOM\n    //bind para manter o contexto do this em document\n    const $ = document.querySelector.bind(document);\n\n    //elementos HTML\n    this._inputData = $(\"#data\");\n    this._inputQuantidade = $(\"#quantidade\");\n    this._inputValor = $(\"#valor\");\n\n    // this._negociacoes = ProxyFactory.create(\n    //   new Negociacoes(),\n    //   [\"adiciona\", \"esvazia\"],\n    //   model => this._negociacoesView.update(model)\n    // );\n    // this._negociacoesView = new NegociacoesView(\"#negociacoes\");\n    // this._negociacoesView.update(this._negociacoes);\n\n    this._negociacoes = new Bind(\n      new Negociacoes(),\n      new NegociacoesView(\"#negociacoes\"),\n      \"adiciona\",\n      \"esvazia\"\n    );\n\n    // this._mensagem = ProxyFactory.create(new Mensagem(), [\"texto\"], model =>\n    //   this._mensagemView.update(model)\n    // );\n    // this._mensagemView = new MensagemView(\"#mensagemView\");\n    // this._mensagemView.update(this._mensagem);\n\n    this._mensagem = new Bind(\n      new Mensagem(),\n      new MensagemView(\"#mensagemView\"),\n      \"texto\"\n    );\n\n    this._service = new NegociacaoService();\n    this._init();\n  }\n  async _init() {\n    try {\n      const dao = await getNegociacaoDao();\n      const negociacoes = await dao.listaTodos();\n      negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao));\n    } catch (error) {\n      this._mensagem.texto = getExceptionMessage(error);\n    }\n  }\n\n  @Debounce()\n  async adiciona(event) {\n    try {\n      //Previnir evento padrão\n      event.preventDefault();\n\n      const negociacao = this._criaNegociacao();\n\n      const dao = await getNegociacaoDao();\n      await dao.adciona(negociacao);\n      this._negociacoes.adiciona(negociacao);\n      this._mensagem.texto = \"Negociação adicionada com Sucesso\";\n      this._limpaformulario();\n    } catch (error) {\n      console.log(error);\n      console.log(error.stack);\n      if (error instanceof DataInvalidaException) {\n        this._mensagem.texto = getExceptionMessage(error);\n      } else {\n        this._mensagem.texto =\n          \"Um erro nao esperado aconteceu. Entre em contato com o suporte\";\n      }\n    }\n  }\n\n  _criaNegociacao() {\n    return new Negociacao(\n      DateConverter.toDate(this._inputData.value),\n      parseInt(this._inputQuantidade.value),\n      parseFloat(this._inputValor.value)\n    );\n  }\n\n  _limpaformulario() {\n    this._inputData.value = \"\";\n    this._inputQuantidade.value = 1;\n    this._inputValor.value = 0.0;\n    this._inputData.focus();\n  }\n\n  async apaga() {\n    try {\n      const dao = await getNegociacaoDao();\n      await dao.apagaTodos();\n      this._negociacoes.esvazia();\n      this._mensagem.texto = \"Negociações Apagada com sucesso\";\n    } catch (error) {\n      this._mensagem.texto = getExceptionMessage(error);\n    }\n  }\n\n  @Debounce(1500)\n  async importaNegociacoes() {\n    /* const listaNegociacoes = [];\n\n    this._service\n      .obterNegocicoesDaSemana()\n      .then(({ negociacoes }) => {\n        listaNegociacoes.push(...negociacoes);\n        return this._service.obterNegociacaoDaSemanaAnterior();\n      })\n      .then(({ negociacoes }) => {\n        listaNegociacoes.push(...negociacoes);\n        return this._service.obterNegociacoesDaSemanaRetrasada();\n      })\n      .then(({ negociacoes, mensagem }) => {\n        listaNegociacoes.push(...negociacoes);\n\n        listaNegociacoes.forEach(negociacao =>\n          this._negociacoes.adiciona(negociacao)\n        );\n        this._mensagem.texto = mensagem;\n      })\n      .catch(err => (this._mensagem.texto = err));*/\n    // Promise.all([\n    //   this._service.obterNegocicoesDaSemana(),\n    //   this._service.obterNegociacoesDaSemanaAnterior(),\n    //   this._service.obterNegociacoesDaSemanaRetrasada()\n    // ])\n    //   .then(periodo => {\n    //     periodo = periodo\n    //       .reduce((novoArray, item) => novoArray.concat(item.negociacoes), [])\n    //       .forEach(negociacao => this._negociacoes.adiciona(negociacao));\n    //   })\n    //   .catch(err => (this._mensagem.texto = err));\n\n    try {\n      const negociacoes = await this._service.obtemNegociacoesDoPeriodo();\n\n      negociacoes\n        .filter(\n          novaNegociacao =>\n            !this._negociacoes\n              .paraArray()\n              .some(negociacaoExistente =>\n                novaNegociacao.equals(negociacaoExistente)\n              )\n        )\n        .forEach(negociacao => this._negociacoes.adiciona(negociacao));\n      this._mensagem.texto = \"Negociações do período importadas com sucesso\";\n    } catch (error) {\n      this._mensagem.texto = getExceptionMessage(error);\n    }\n  }\n}\n"]}